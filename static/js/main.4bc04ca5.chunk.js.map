{"version":3,"sources":["firebase_config.js","Todo.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","Todo","inprogress","todo","id","start","useState","checked","setChecked","ListItem","ListItemText","primary","secondary","Checkbox","color","onChange","e","target","onClick","collection","doc","update","Button","delete","AppWrapper","styled","div","Title","h1","Subtitle","p","AddWrapper","form","TodoWrapper","ul","App","todoInput","setTodoInput","todos","setTodos","useEffect","getTodos","onSnapshot","querySnapshot","docs","map","data","TextField","label","value","style","width","maxWidth","variant","preventDefault","add","FieldValue","serverTimestamp","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAWAA,IAASC,cATc,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAKT,I,UAAMC,EAAKR,IAASS,Y,oDC4BLC,EApCF,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,KAAaC,GAAQ,EAAfC,MAAe,EAARD,IAAQ,EAChBE,oBAAS,GADO,mBACvCC,EADuC,KAC9BC,EAD8B,KAoB9C,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcC,QAAO,UAAKR,GAAQS,UAAS,UAAKV,EAAa,qBAAkB,sBAE/E,cAACW,EAAA,EAAD,CACEN,QAASA,EACTO,MAAM,UACNC,SAxBe,SAACC,GACpBR,EAAWQ,EAAEC,OAAOV,UAwBhBW,QArBiB,WACrBnB,EAAGoB,WAAW,SACXC,IAAIhB,GACJiB,OAAO,CACNnB,YAAaA,OAmBf,cAACoB,EAAA,EAAD,CAAQJ,QAhBO,WACjBnB,EAAGoB,WAAW,SACXC,IAAIhB,GACJmB,UAaD,SAA6B,cAAC,IAAD,QAThBnB,ICkDnB,IAAMoB,EAAaC,IAAOC,IAAV,oJASVC,EAAQF,IAAOG,GAAV,qFAMLC,EAAWJ,IAAOK,EAAV,qFAMRC,EAAaN,IAAOO,KAAV,wGAMVC,EAAcR,IAAOS,GAAV,wHAOFC,EAtGf,WAAgB,IAAD,EACqB7B,mBAAS,IAD9B,mBACN8B,EADM,KACKC,EADL,OAEa/B,mBAAS,IAFtB,mBAENgC,EAFM,KAECC,EAFD,KAIbC,qBAAU,WACRC,MACC,IAEH,IAYMA,EAAW,WACf1C,EAAGoB,WAAW,SACXuB,YAAW,SAACC,GACXJ,EACEI,EAAcC,KAAKC,KAAI,SAACzB,GAAD,MAAU,CACjChB,GAAIgB,EAAIhB,GACRF,WAAYkB,EAAI0B,OAAO5C,WACvBG,MAAOe,EAAI0B,OAAOzC,MAClBF,KAAMiB,EAAI0B,OAAO3C,cAMzB,OACE,eAACqB,EAAD,WACE,cAACG,EAAD,iCACA,cAACE,EAAD,+DACA,eAACE,EAAD,WACE,cAACgB,EAAA,EAAD,CACA3C,GAAG,iBACH4C,MAAM,eACNC,MAAOb,EACPc,MAAO,CAACC,MAAO,OAAQC,SAAU,SACjCrC,SAAU,SAACC,GAAD,OAAOqB,EAAarB,EAAEC,OAAOgC,UAGzC,cAAC3B,EAAA,EAAD,CACE+B,QAAQ,YACRvC,MAAM,UACNI,QA1CU,SAACF,GACfA,EAAEsC,iBAEFvD,EAAGoB,WAAW,SACXoC,IAAI,CACHrD,YAAY,EACZG,MAAOd,IAASS,UAAUwD,WAAWC,kBACrCtD,KAAMiC,IAERC,EAAa,KAkCXqB,KAAK,SAJP,oBAOA,cAACzB,EAAD,UACGK,EAAMO,KAAI,SAAA1C,GAAI,OACf,cAAC,EAAD,CACEC,GAAID,EAAKC,GACTF,WAAYC,EAAKD,WACjBC,KAAMA,EAAKA,KACXE,MAAOF,EAAKE,iBC/DtBsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4bc04ca5.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAeGmD1ZH1XpAQ4l50dZ2lDZYSzXebp3pA\",\r\n  authDomain: \"todoapo-9335e.firebaseapp.com\",\r\n  projectId: \"todoapo-9335e\",\r\n  storageBucket: \"todoapo-9335e.appspot.com\",\r\n  messagingSenderId: \"828569981664\",\r\n  appId: \"1:828569981664:web:01e40322e91467f12cf685\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport { db };","import React, { useState } from 'react'\r\nimport { Button, Checkbox, ListItem, ListItemText } from '@material-ui/core';\r\nimport { db } from './firebase_config';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst Todo = ({inprogress, todo, start, id}) => {\r\n  const [checked, setChecked] = useState(false)\r\n\r\n  const handleChange = (e) => {\r\n    setChecked(e.target.checked);\r\n  }\r\n\r\n  const toggleProgress = () => {\r\n    db.collection('todos')\r\n      .doc(id)\r\n      .update({\r\n        inprogress: !inprogress})\r\n  }\r\n\r\n  const deleteTodo = () => {\r\n    db.collection('todos')\r\n      .doc(id)\r\n      .delete()\r\n  }\r\n  \r\n  return (\r\n    <ListItem key={id}>\r\n      <ListItemText primary={`${todo}`} secondary={`${inprogress ? 'in progress ⏳' : 'completed ✔'}`} />\r\n      {/* <Button variant=\"contained\" onClick={toggleProgress}>{inprogress ? 'Done' : 'unDone'}</Button> */}\r\n      <Checkbox\r\n        checked={checked}\r\n        color=\"primary\"\r\n        onChange={handleChange}\r\n        onClick={toggleProgress}\r\n        />\r\n      <Button onClick={deleteTodo}><DeleteIcon/></Button>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\n\r\nexport default Todo\r\n","import styled from 'styled-components';\r\nimport { useState, useEffect } from 'react';\r\nimport { Button, TextField } from '@material-ui/core'\r\nimport { db } from './firebase_config';\r\nimport firebase from 'firebase';\r\n\r\nimport Todo from './Todo';\r\n\r\nfunction App() {\r\n  const [todoInput, setTodoInput] = useState('');\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, []) // blank to run only on load\r\n\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection('todos')\r\n      .add({\r\n        inprogress: true,\r\n        start: firebase.firestore.FieldValue.serverTimestamp(),\r\n        todo: todoInput\r\n      })\r\n      setTodoInput(\"\");\r\n  }\r\n\r\n  const getTodos = () => {\r\n    db.collection('todos')\r\n      .onSnapshot((querySnapshot) => {\r\n        setTodos(\r\n          querySnapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          inprogress: doc.data().inprogress,\r\n          start: doc.data().start,\r\n          todo: doc.data().todo\r\n        }))) \r\n      }) // when new data added, instantly reflected on our list\r\n  }\r\n\r\n\r\n  return (\r\n    <AppWrapper>\r\n      <Title>Angelo's Todo App </Title>\r\n      <Subtitle>Powered by ⚛React and 🔥Firebase!</Subtitle>\r\n      <AddWrapper>\r\n        <TextField \r\n        id=\"standard-basic\" \r\n        label=\"Write a todo\" \r\n        value={todoInput}\r\n        style={{width: '100%', maxWidth: '400px'}}\r\n        onChange={(e) => setTodoInput(e.target.value)}\r\n        \r\n      />\r\n      <Button \r\n        variant='contained'\r\n        color=\"primary\" \r\n        onClick={addTodo}\r\n        type=\"submit\"\r\n      >add</Button>\r\n      </AddWrapper>\r\n      <TodoWrapper>\r\n        {todos.map(todo => (\r\n        <Todo \r\n          id={todo.id}\r\n          inprogress={todo.inprogress}\r\n          todo={todo.todo}\r\n          start={todo.start}\r\n          />))}\r\n      </TodoWrapper>\r\n      \r\n    </AppWrapper>\r\n  );\r\n}\r\n\r\nconst AppWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n`;\r\n\r\n\r\nconst Title = styled.h1`\r\n  font-size: 24px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n`;\r\n\r\nconst Subtitle = styled.p`\r\n  font-size: 16px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n`;\r\n\r\nconst AddWrapper = styled.form`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\n\r\nconst TodoWrapper = styled.ul`\r\n  text-decoration: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100%;\r\n  max-width: 350px;\r\n`;\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}